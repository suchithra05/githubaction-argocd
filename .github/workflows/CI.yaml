# .github/workflows/ci.yaml

name: CI - Build, Scan, Push & Trigger CD

on:
  pull_request:
    branches:
      - dev
    types:
      - opened
      - synchronize
      - reopened

env:
  IMAGE_NAME: vote-app
  ARTIFACTORY_REGISTRY: trial1e0fhi.jfrog.io/docker-local
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to JFrog Artifactory
        run: |
          echo "${{ secrets.ARTIFACTORY_PASSWORD }}" | docker login $ARTIFACTORY_REGISTRY -u "${{ secrets.ARTIFACTORY_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t $ARTIFACTORY_REGISTRY/$IMAGE_NAME:$IMAGE_TAG ./apps

      - name: Save image tag for next jobs
        run: echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

  scan:
    name: Scan Image
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Log in to Artifactory
        run: |
          echo "${{ secrets.ARTIFACTORY_PASSWORD }}" | docker login $ARTIFACTORY_REGISTRY -u "${{ secrets.ARTIFACTORY_USERNAME }}" --password-stdin
          
      - name: Pull image
        run: docker pull $ARTIFACTORY_REGISTRY/$IMAGE_NAME:$IMAGE_TAG

      - name: Scan with Trivy
        uses: aquasecurity/trivy-action@0.11.2
        with:
          image-ref: ${{ env.ARTIFACTORY_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: table
          exit-code: 0
          severity: CRITICAL,HIGH

  push:
    name: Push to Docker Hub
    runs-on: ubuntu-latest
    needs: scan

    steps:
      - name: Log in to Artifactory
        run: |
          echo "${{ secrets.JFROG_PASSWORD }}" | docker login $ARTIFACTORY_REGISTRY -u ${{ secrets.JFROG_USERNAME }} --password-stdin

      - name: Pull Image
        run: docker pull $ARTIFACTORY_REGISTRY/$IMAGE_NAME:$IMAGE_TAG

      - name: Tag Image for Docker Hub
        run: |
          docker tag $ARTIFACTORY_REGISTRY/$IMAGE_NAME:$IMAGE_TAG docker.io/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        run: |
          docker push docker.io/${{ secrets.DOCKER_USERNAME }}/$IMAGE_NAME:$IMAGE_TAG

  trigger:
    name: Trigger CD via Repository Dispatch
    runs-on: ubuntu-latest
    needs: push

    steps:
      - name: Trigger CD pipeline
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.CD_REPO_TOKEN }}
          repository: suchithra05/vote-app-manifests
          event-type: deploy-trigger
          client-payload: |
            {
              "image_tag": "${{ env.IMAGE_TAG }}"
            }
